{"ast":null,"code":"var _jsxFileName = \"/Users/asacco24/WebstormProjects/dash/src/components/Calendar.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline/index';\nimport Grid from '@material-ui/core/Grid/index';\nimport BigCalendar from 'react-big-calendar-like-google';\nimport moment from 'moment';\nimport events from '../events/events';\nimport Topbar from './Topbar';\nimport SectionHeader from './typo/SectionHeader';\nimport CardItem from \"./cards/CardItem\";\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['A500'],\n    overflow: 'hidden',\n    background: \"url(\".concat(backgroundShape, \") no-repeat\"),\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1000\n  }\n});\n\nlet allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k]);\n\nclass Requests extends Component {\n  render() {\n    const classes = this.props.classes;\n    const currentPath = this.props.location.pathname;\n    BigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Topbar, {\n      currentPath: currentPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      spacing: 24,\n      alignItems: \"center\",\n      justify: \"center\",\n      container: true,\n      className: classes.grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(SectionHeader, {\n      title: \"Calendar\",\n      subtitle: \"One page with a list of a collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(CardItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(BigCalendar, Object.assign({}, this.props, {\n      events: events,\n      views: allViews,\n      step: 60,\n      defaultDate: new Date(2019, 4, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default withStyles(styles)(Requests);","map":{"version":3,"sources":["/Users/asacco24/WebstormProjects/dash/src/components/Calendar.js"],"names":["React","Component","withStyles","CssBaseline","Grid","BigCalendar","moment","events","Topbar","SectionHeader","CardItem","backgroundShape","require","styles","theme","root","flexGrow","backgroundColor","palette","grey","overflow","background","backgroundSize","backgroundPosition","marginTop","padding","paddingBottom","grid","width","allViews","Object","keys","Views","map","k","Requests","render","classes","props","currentPath","location","pathname","setLocalizer","momentLocalizer","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,MAAnB,CAFb;AAGJC,IAAAA,QAAQ,EAAE,QAHN;AAIJC,IAAAA,UAAU,gBAASV,eAAT,gBAJN;AAKJW,IAAAA,cAAc,EAAE,OALZ;AAMJC,IAAAA,kBAAkB,EAAE,SANhB;AAOJC,IAAAA,SAAS,EAAE,EAPP;AAQJC,IAAAA,OAAO,EAAE,EARL;AASJC,IAAAA,aAAa,EAAE;AATX,GADiB;AAYvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAZiB,CAAL,CAApB;;AAiBA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY1B,WAAW,CAAC2B,KAAxB,EAA+BC,GAA/B,CAAmCC,CAAC,IAAI7B,WAAW,CAAC2B,KAAZ,CAAkBE,CAAlB,CAAxC,CAAf;;AAEA,MAAMC,QAAN,SAAuBlC,SAAvB,CAAiC;AAE/BmC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,UAAME,WAAW,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,QAAxC;AACApC,IAAAA,WAAW,CAACqC,YAAZ,CAAyBrC,WAAW,CAACsC,eAAZ,CAA4BrC,MAA5B,CAAzB;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEiC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACtB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,EAAf;AAAmB,MAAA,UAAU,EAAC,QAA9B;AAAuC,MAAA,OAAO,EAAC,QAA/C;AAAwD,MAAA,SAAS,MAAjE;AAAkE,MAAA,SAAS,EAAEsB,OAAO,CAACV,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,UAArB;AAAgC,MAAA,QAAQ,EAAC,sCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD,oBACQ,KAAKW,KADb;AAEI,MAAA,MAAM,EAAE/B,MAFZ;AAGI,MAAA,KAAK,EAAEsB,QAHX;AAII,MAAA,IAAI,EAAE,EAJV;AAKI,MAAA,WAAW,EAAE,IAAIe,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAFF,CADF,CADF,CADF,CAHF,CADF;AAyBD;;AAhC8B;;AAmCjC,eAAe1C,UAAU,CAACW,MAAD,CAAV,CAAmBsB,QAAnB,CAAf","sourcesContent":["import React,  { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline/index';\nimport Grid from '@material-ui/core/Grid/index';\nimport BigCalendar from 'react-big-calendar-like-google';\nimport moment from 'moment';\nimport events from '../events/events';\nimport Topbar from './Topbar';\nimport SectionHeader from './typo/SectionHeader';\nimport CardItem from \"./cards/CardItem\";\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['A500'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1000\n  }\n});\n\nlet allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k]);\n\nclass Requests extends Component {\n\n  render() {\n    const { classes } = this.props;\n    const currentPath = this.props.location.pathname\n    BigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <SectionHeader title=\"Calendar\" subtitle=\"One page with a list of a collection\" />\n                <CardItem>\n                  <BigCalendar\n                      {...this.props}\n                      events={events}\n                      views={allViews}\n                      step={60}\n                      defaultDate={new Date(2019, 4, 1)}\n                  />\n                </CardItem>\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(Requests);"]},"metadata":{},"sourceType":"module"}