{"ast":null,"code":"var _jsxFileName = \"/Users/asacco24/WebstormProjects/dash/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withRouter, Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline/index';\nimport Paper from '@material-ui/core/Paper/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport Grid from '@material-ui/core/Grid/index';\nimport Slider from '@material-ui/lab/Slider';\nimport Button from '@material-ui/core/Button/index';\nimport Avatar from '@material-ui/core/Avatar/index';\nimport SimpleLineChart from './SimpleLineChart';\nimport Months from './common/Months';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Loading from './common/Loading';\nimport Topbar from './Topbar';\n\nconst numeral = require('numeral');\n\nnumeral.defaultFormat('0,000');\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['100'],\n    overflow: 'hidden',\n    background: \"url(\".concat(backgroundShape, \") no-repeat\"),\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: \"0 \".concat(theme.spacing.unit * 2, \"px\"),\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 20px)'\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing.unit * 2\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  outlinedButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing.unit\n  },\n  actionButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing.unit,\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center'\n  },\n  block: {\n    padding: theme.spacing.unit * 2\n  },\n  loanAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: 'inline-block',\n    marginRight: 10\n  },\n  buttonBar: {\n    display: 'flex'\n  },\n  noBorder: {\n    borderBottomStyle: 'hidden'\n  },\n  mainBadge: {\n    textAlign: 'center',\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4\n  }\n});\n\nconst monthRange = Months;\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      amount: 15000,\n      period: 3,\n      start: 0,\n      monthlyInterest: 0,\n      totalInterest: 0,\n      monthlyPayment: 0,\n      totalPayment: 0,\n      data: []\n    };\n\n    this.handleChangeAmount = (event, value) => {\n      this.setState({\n        amount: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n\n    this.handleChangePeriod = (event, value) => {\n      this.setState({\n        period: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n\n    this.handleChangeStart = (event, value) => {\n      this.setState({\n        start: value,\n        loading: false\n      });\n      this.updateValues();\n    };\n  }\n\n  updateValues() {\n    const _this$state = this.state,\n          amount = _this$state.amount,\n          period = _this$state.period,\n          start = _this$state.start;\n    const monthlyInterest = amount * Math.pow(0.01 * 1.01, period) / Math.pow(0.01, period - 1);\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment = period > start ? totalPayment / (period - start) : totalPayment / period;\n    const data = Array.from({\n      length: period + start\n    }, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        'Type': delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        'OtherType': Math.ceil(monthlyInterest).toFixed(0)\n      };\n    });\n    this.setState({\n      monthlyInterest,\n      totalInterest,\n      totalPayment,\n      monthlyPayment,\n      data\n    });\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          amount = _this$state2.amount,\n          period = _this$state2.period,\n          start = _this$state2.start,\n          monthlyPayment = _this$state2.monthlyPayment,\n          monthlyInterest = _this$state2.monthlyInterest,\n          data = _this$state2.data,\n          loading = _this$state2.loading;\n    const currentPath = this.props.location.pathname;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Topbar, {\n      currentPath: currentPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      spacing: 24,\n      alignItems: \"center\",\n      justify: \"center\",\n      container: true,\n      className: classes.grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.topBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Adjust and play with our sliders.\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.outlinedButtom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Get help\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"How much you want to transfer\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Use slider to set the amount you need.\"), React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, numeral(amount).format(), \" USD\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      value: amount,\n      min: 20000,\n      max: 150000,\n      step: 15000,\n      onChange: this.handleChangeAmount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"15,000 USD\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"150,000 USD\")))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Period\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"A sample period\"), React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, period, \" months\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      value: period,\n      min: 1,\n      max: 6,\n      step: 1,\n      onChange: this.handleChangePeriod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"1 month\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"6 months\")))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Start date\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Set your preferred start date.\"), React.createElement(\"div\", {\n      className: classes.blockCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, monthRange[start])), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      value: start,\n      min: 0,\n      max: 5,\n      step: 1,\n      onChange: this.handleChangeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Dec 2018\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"May 2019\")))))), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      style: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: loading ? classes.loadingState : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Some details\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Details about the graph\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 14,\n        marginBottom: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.inlining,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.loanAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.inlining,\n      variant: \"subtitle2\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Typography, {\n      className: classes.inlining,\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, numeral(monthlyPayment).format(), \" units\")), React.createElement(\"div\", {\n      className: classes.inlining,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.interestAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.inlining,\n      variant: \"subtitle2\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Othe type\"), React.createElement(Typography, {\n      className: classes.inlining,\n      color: \"secondary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, numeral(monthlyInterest).format(), \" units\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(SimpleLineChart, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      style: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: loading ? classes.loadingState : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"div\", {\n      className: classes.mainBadge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(VerifiedUserIcon, {\n      style: {\n        fontSize: 72\n      },\n      fontSize: 'large',\n      color: 'secondary',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h5\",\n      color: 'secondary',\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Verified\")), React.createElement(\"div\", {\n      className: classes.buttonBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Button, {\n      to: {\n        pathname: \"/dashboard\",\n        search: \"?type=save\"\n      },\n      component: Link,\n      variant: \"outlined\",\n      className: classes.actionButtom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      to: {\n        pathname: \"/dashboard\",\n        search: \"?type=apply\"\n      },\n      component: Link,\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.actionButtom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Apply\"))))))))));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(Dashboard));","map":{"version":3,"sources":["/Users/asacco24/WebstormProjects/dash/src/components/Dashboard.js"],"names":["React","Component","withStyles","withRouter","Link","CssBaseline","Paper","Typography","Grid","Slider","Button","Avatar","SimpleLineChart","Months","VerifiedUserIcon","Loading","Topbar","numeral","require","defaultFormat","backgroundShape","styles","theme","root","flexGrow","backgroundColor","palette","grey","overflow","background","backgroundSize","backgroundPosition","paddingBottom","grid","width","margin","spacing","unit","breakpoints","down","loadingState","opacity","paper","padding","textAlign","color","text","secondary","rangeLabel","display","justifyContent","paddingTop","topBar","alignItems","outlinedButtom","textTransform","actionButtom","height","blockCenter","block","loanAvatar","verticalAlign","marginRight","marginBottom","primary","contrastText","main","interestAvatar","light","inlining","buttonBar","noBorder","borderBottomStyle","mainBadge","marginTop","monthRange","Dashboard","state","loading","amount","period","start","monthlyInterest","totalInterest","monthlyPayment","totalPayment","data","handleChangeAmount","event","value","setState","updateValues","handleChangePeriod","handleChangeStart","Math","pow","Array","from","length","i","delayed","name","ceil","toFixed","componentDidMount","render","classes","props","currentPath","location","pathname","format","position","fontSize","search"],"mappings":"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","sourcesContent":["import React,  { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withRouter, Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline/index';\nimport Paper from '@material-ui/core/Paper/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport Grid from '@material-ui/core/Grid/index';\nimport Slider from '@material-ui/lab/Slider';\nimport Button from '@material-ui/core/Button/index';\nimport Avatar from '@material-ui/core/Avatar/index';\nimport SimpleLineChart from './SimpleLineChart';\nimport Months from './common/Months';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Loading from './common/Loading';\n\nimport Topbar from './Topbar';\n\nconst numeral = require('numeral');\nnumeral.defaultFormat('0,000');\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['100'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: `0 ${theme.spacing.unit * 2}px`,\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 20px)'\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing.unit * 2\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  outlinedButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing.unit\n  },\n  actionButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing.unit,\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center'\n  },\n  block: {\n    padding: theme.spacing.unit * 2,\n  },\n  loanAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: 'inline-block',\n    marginRight: 10\n  },\n  buttonBar: {\n    display: 'flex'\n  },\n  noBorder: {\n    borderBottomStyle: 'hidden'\n  },\n  mainBadge: {\n    textAlign: 'center',\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4\n  }\n});\n\nconst monthRange = Months;\n\nclass Dashboard extends Component {\n\n  state = {\n    loading: true,\n    amount: 15000,\n    period: 3,\n    start: 0,\n    monthlyInterest: 0,\n    totalInterest: 0,\n    monthlyPayment: 0,\n    totalPayment: 0,\n    data: []\n  };\n\n  updateValues() {\n    const { amount, period, start } = this.state;\n    const monthlyInterest = (amount)*(Math.pow(0.01*(1.01), period))/(Math.pow(0.01, period - 1))\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment = period > start ? totalPayment/(period - start) : totalPayment/(period)\n\n    const data = Array.from({length: period + start}, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        'Type': delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        'OtherType': Math.ceil(monthlyInterest).toFixed(0)\n      }\n    })\n\n    this.setState({monthlyInterest, totalInterest, totalPayment, monthlyPayment, data})\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  handleChangeAmount = (event, value) => {\n    this.setState({amount: value, loading: false});\n    this.updateValues();\n  }\n\n  handleChangePeriod = (event, value) => {\n    this.setState({period: value, loading: false});\n    this.updateValues();\n  }\n\n  handleChangeStart = (event, value) => {\n    this.setState({start: value, loading: false});\n    this.updateValues();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { amount, period, start, monthlyPayment,\n      monthlyInterest, data, loading } = this.state;\n    const currentPath = this.props.location.pathname\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <div className={classes.topBar}>\n                  <div className={classes.block}>\n                    <Typography variant=\"h6\" gutterBottom>Dashboard</Typography>\n                    <Typography variant=\"body1\">\n                      Adjust and play with our sliders.\n                    </Typography>\n                  </div>\n                  <div>\n                    <Button variant=\"outlined\" className={classes.outlinedButtom}>\n                      Get help\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      How much you want to transfer\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Use slider to set the amount you need.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {numeral(amount).format()} USD\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={amount}\n                        min={20000}\n                        max={150000}\n                        step={15000}\n                        onChange={this.handleChangeAmount}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          15,000 USD\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          150,000 USD\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Period\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      A sample period\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {period} months\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={period}\n                        min={1}\n                        max={6}\n                        step={1}\n                        onChange={this.handleChangePeriod}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          1 month\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          6 months\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Start date\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Set your preferred start date.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {monthRange[start]}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={start}\n                        min={0}\n                        max={5}\n                        step={1}\n                        onChange={this.handleChangeStart}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          Dec 2018\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          May 2019\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid container spacing={24} justify=\"center\">\n                <Grid item xs={12} md={8} >\n                  <Paper className={classes.paper} style={{position: 'relative'}}>\n                    <Loading loading={loading} />\n                    <div className={loading ? classes.loadingState : ''}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Some details\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Details about the graph\n                      </Typography>\n                      <div style={{marginTop: 14, marginBottom: 14}}>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.loanAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Type\n                          </Typography>\n                          <Typography className={classes.inlining} color='secondary' variant=\"h6\" gutterBottom>\n                            {numeral(monthlyPayment).format()} units\n                          </Typography>\n                        </div>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.interestAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Othe type\n                          </Typography>\n                          <Typography className={classes.inlining} color=\"secondary\" variant=\"h6\" gutterBottom>\n                            {numeral(monthlyInterest).format()} units\n                          </Typography>\n                        </div>\n                      </div>\n                      <div >\n                        <SimpleLineChart data={data} />\n                      </div>\n                    </div>\n                  </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper} style={{position: 'relative'}}>\n                  <Loading loading={loading} />\n                  <div className={loading ? classes.loadingState : ''}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      State\n                    </Typography>\n                    <div className={classes.mainBadge}>\n                      <VerifiedUserIcon style={{fontSize: 72}} fontSize={'large'} color={'secondary'} />\n                      <Typography variant=\"h5\" color={'secondary'} gutterBottom>\n                        Verified\n                      </Typography>\n                    </div>\n                    <div className={classes.buttonBar}>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=save` }} component={Link} variant=\"outlined\" className={classes.actionButtom}>\n                        Save\n                      </Button>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=apply` }} component={Link} color='primary' variant=\"contained\" className={classes.actionButtom}>\n                        Apply\n                      </Button>\n                    </div>\n                  </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}